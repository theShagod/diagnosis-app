{"version":3,"sources":["components/Navbar.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","onChange","this","type","e","val","target","value","charAt","length","toLowerCase","search","RegExp","diagnosis","slice","class","aria-label","query","selectedOptions","selected","Component","Results","dataUI","data","map","item","title","description","note","dx","dxUI","App","filterData","bind","state","filteredData","setState","q","doesItemHaveQuery","category","regex","i","dataKeys","Object","keys","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.086779f2.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render () {\n        const {onChange} = this.props;\n        return (\n            <div>\n                <input type=\"text\" onChange={e => {\n                    let val = e.target.value;\n                    if (val == \"\" || val.charAt(val.length - 1).toLowerCase().search(new RegExp(\"[\\\\w ]\")) != -1) {\n                        onChange(val, this.props.diagnosis)\n                    } else {\n                        e.target.value = val.slice(0, val.length - 1); //removes the last letter\n                    }\n                    }}/>\n                <select class=\"form-select\" aria-label=\"Default select example\" onChange={e => {\n                    onChange(this.props.query, e.target.selectedOptions[0].value)\n                }}>\n                    <option value=\"\" selected>Select A Diagnosis</option>\n                    <option value=\"\"> Select All</option>\n                    <option value=\"Abdominal US Diagnosis\">Abdominal US Diagnosis</option>\n                    <option value=\"Pelvic Ultrasound Diagnosis\">Pelvic Ultrasound Diagnosis</option>\n                    <option value=\"Small Parts US Diagnosis\">Small Parts US Diagnosis</option>\n                    <option value=\"Soft Tissue US Diagnosis\">Soft Tissue US Diagnosis</option>\n                    <option value=\"Vascular US Diagnosis\">Vascular US Diagnosis</option>\n                    <option value=\"OB Ultrasound Diagnosis\">OB Ultrasound Diagnosis</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;\n\n","import React, {Component} from \"react\";\n\n\nclass Results extends Component {\n    render () {\n        const {data} = this.props;\n        const dataUI = data.map(item => {\n            const {title, type, description, note, dx} = item;\n            const dxUI = <ul>\n                {\n                    dx.map(item => {\n                        return (<li>{item}</li>)\n                    })\n                }\n                </ul>\n            return (\n                <div class=\"card m-3\">\n                    <div class=\"card-body\">\n                    <div class = \"row\">\n                        <div class=\"col\">\n                            <h4>{title}</h4>\n                            <p>{type}</p>\n                            <p>{description}</p>\n                            <p class= \"text-red\">{note}</p>\n                            </div>\n                            \n                            <div class=\"col\">{dxUI}</div>\n                        </div>\n                    </div>\n                </div>\n            \n            )\n        })\n        return (\n            <div>\n                {dataUI}\n            </div>\n        )\n    }\n}\n\nexport default Results;","import './App.css';\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\n//components\nimport Navbar from './components/Navbar';\nimport Results from './components/Results';\n\n//data\nimport data from './data.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.filterData = this.filterData.bind(this);\n    this.state = {\n      filteredData: data,\n      query: \"\",\n      diagnosis: \"\"\n    }\n  }\n\n  filterData(query, diagnosis) {\n    this.setState({query, diagnosis})\n    let filteredData = data;\n    if (query != \"\") {\n      let q = query.toLowerCase();\n      function doesItemHaveQuery(item, category) {\n        \n        if (data[0][category] == null) {\n          return false;\n        }\n\n        let regex = new RegExp(q, \"g\")\n        if (category == \"dx\") { //if at the category == dx which is an array\n          for (let i = 0; i < item[category].length; i++) {\n            let text = item[category][i].toLowerCase();\n            if (text.search(regex) != -1) {\n              return true;\n            }\n          }\n          return false;\n        }\n        let text = item[category].toLowerCase();\n        return text.search(regex) != -1;\n      }\n\n      let dataKeys = Object.keys(data[0]);\n      filteredData = data.filter(item => {\n        for (let i = 0; i < dataKeys.length; i++) {\n          if (doesItemHaveQuery(item, dataKeys[i])) {\n            return true;\n          }\n        }\n        return false;\n      })\n    }\n    \n    if (diagnosis) {\n      filteredData = filteredData.filter(item => item.type == diagnosis)\n    }\n\n    this.setState({filteredData})\n  }\n\n  render () {\n    return (\n      <div>\n        <Navbar onChange={this.filterData} diagnosis={this.state.diagnosis} query = {this.state.query}/>\n        <Results data = {this.state.filteredData}/>\n      </div>\n      \n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}